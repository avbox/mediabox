#!/bin/sh
#
# MediaBox - Linux based set-top firmware
# Copyright (C) 2016-2017 Fernando Rodriguez
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License Version 3 as 
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA


ARCH="x86_64"
BOARD="qemu"
KERNEL="build/${ARCH}/${BOARD}/output/images/bzImage"
ROOTFS="build/${ARCH}/${BOARD}/output/images/rootfs.ext4"
VIDEO=libdrm
BUSYBOX_INIT=0
KVM=1
EMU_VIDEO=std
NCORES=2
SDL=1

echo_e()
{
	echo -e "$@"
}

warn()
{
	echo_e "WARNING!: $@" >&2
}

while [ $# != 0 ];
do
	case $1 in
		--cores=*)
			CORES=${1#*=}
		;;
		--video=*)
			VIDEO=${1#*=}
		;;
		--emu-video=*)
			EMU_VIDEO=${1#*=}
		;;
		--busybox-init)
			BUSYBOX_INIT=1
		;;
		--kvm)
			KVM=1
		;;
		--no-kvm)
			KVM=0
		;;
		--help)
			echo_e "MediaBox Emulator"
			echo_e "emulator [options]"
			echo_e ""
			echo_e "Options:"
			echo_e "  --cores=<no>\t\tNumber of cores for target system"
			echo_e "  --video=<drv>\t\tThe mediabox video driver"
			echo_e "  --emu-video=<drv>\tThe QEMU video driver to use"
			echo_e "  --busybox-init\t\tBoot using BusyBox's init system"
			echo_e "  --[no-]kvm\t\tEnable/disable kvm support"
			echo_e "  --help\t\tShow this."
			echo_e ""
			exit 0
		;;
	esac
	shift
done

# find binaries
QEMU_BIN="$(which qemu-system-${ARCH})"
GREP_BIN="$(which grep)"
			
if [ -c /dev/kvm ]; then
	if [ ${KVM} -eq 1 ]; then
		EXTRA_ARGS="--enable-kvm"
	fi
fi

# if the sdl backend is enabled use it
if [ "$(${QEMU_BIN} -help | ${GREP_BIN} '\-sdl')" != "" ]; then
	EXTRA_ARGS="${EXTRA_ARGS} -sdl"
else
	warn "QEMU build does not support SDL backend!!"
fi

KARGS=
KARGS="${KARGS} video=mode:1024x600x32"
KARGS="${KARGS} root=/dev/sda rw"
KARGS="${KARGS} quiet loglevel=0"
KARGS="${KARGS} console=ttyS0 mediabox.avbox:noloxg"

if [ ${BUSYBOX_INIT} -eq 0 ]; then
	KARGS="${KARGS} init=/bin/mediabox"
	KARGS="${KARGS} mediabox.video:driver=${VIDEO}"
	KARGS="${KARGS} coredump_filter=255"
fi

# start qemu
QEMU_AUDIO_DRV=alsa \
QEMU_ALSA_DAC_BUFFER_SIZE=16384 \
QEMU_ALSA_DAC_PERIOD_SIZE=1024 \
QEMU_AUDIO_DAC_FIXED_SETTINGS=1 \
QEMU_AUDIO_DAC_FIXED_FREQ=48000 \
QEMU_AUDIO_DAC_FIXED_FMT=S16 \
QEMU_AUDIO_DAC_TRY_POLL=1 \
QEMU_AUDIO_TIMER_PERIOD=50 \
QEMU_ALSA_DAC_DEV=sysdefault \
QEMU_ALSA_ADC_DEV=sysdefault \
${QEMU_BIN} \
	${EXTRA_ARGS} \
	-kernel ${KERNEL} \
	-smp ${NCORES} \
	-vga ${EMU_VIDEO}  \
	-device intel-hda -device hda-duplex \
	-drive file=${ROOTFS},format=raw,if=none,id=a1 \
	-device ich9-ahci,id=ahci \
	-device ide-drive,drive=a1,bus=ahci.0 \
	-net nic,model=virtio \
	-net tap,ifname=vtap0,script=no,downscript=no \
	-boot c \
	-m 1024 \
	-serial stdio \
	-append "${KARGS}" \
	-name MediaBox

	#-usb -bt hci,host \

	#-usb -usbdevice host:04ca:300b -bt hci,host:hci0 \

	#-usb -device usb-host,hostbus=1,hostaddr=5 \

#	-device ich9-usb-ehci1,id=usb \
#	-device ich9-usb-uhci1,masterbus=usb.0,firstport=0,multifunction=on \
#	-device ich9-usb-uhci2,masterbus=usb.0,firstport=2 \
#	-device ich9-usb-uhci3,masterbus=usb.0,firstport=4 \
#	-chardev spicevmc,name=usbredir,id=usbredirchardev1 \
#	-device usb-redir,chardev=usbredirchardev1,id=usbredirdev1 \
#	-chardev spicevmc,name=usbredir,id=usbredirchardev2 \
#	-device usb-redir,chardev=usbredirchardev2,id=usbredirdev2 \
#	-chardev spicevmc,name=usbredir,id=usbredirchardev3 \
#	-device usb-redir,chardev=usbredirchardev3,id=usbredirdev3 \

#	-net nic,model=virtio \
#	-net tap,ifname=vtap,script=no \

#	-netdev user,id=net0,hostfwd=tcp::2222-:22,hostfwd=tcp::6666-:6666 \
#	-device virtio-net,netdev=net0,mac=52:54:00:12:34:56 \

#	-net nic,model=virtio \
#	-net bridge,br=bridge1 \

